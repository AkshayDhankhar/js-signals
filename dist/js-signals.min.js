/*
 * JS Signals <https://github.com/millermedeiros/js-signals>
 * Released under the MIT license (http://www.opensource.org/licenses/mit-license.php)
 * @author Miller Medeiros <http://millermedeiros.com>
 * @version 0.0.1
 * @build 39 11/26/2010 02:27 PM
 */
(function(){var e=window.signals={};e.Signal=function(){this._bindings=[]};e.Signal.prototype={_shouldPropagate:true,_registerListener:function f(t,s,r){var q=this._indexOfListener(t),u;if(q!==-1){u=this._bindings[q];if(u.isOnce()&&!s){throw new Error("You cannot addOnce() then add() the same listener without removing the relationship first.")}else{if(!u.isOnce()&&s){throw new Error("You cannot add() then addOnce() the same listener without removing the relationship first.")}}}else{u=new e.SignalBinding(t,s,r,this);this._bindings.push(u)}return u},_indexOfListener:function a(q){var r=this._bindings.length;while(r--){if(this._bindings[r].listener===q){return r}}return -1},add:function o(r,q){return this._registerListener(r,false,q)},addOnce:function b(r,q){return this._registerListener(r,true,q)},remove:function g(r){var q=this._indexOfListener(r);if(q!==-1){this._bindings.splice(q,1)}return r},removeAll:function j(){this._bindings.length=0},getNumListeners:function m(){return this._bindings.length},stopPropagation:function(){this._shouldPropagate=false},dispatch:function i(t){var q=Array.prototype.slice.call(arguments),u=this._bindings.slice(),r=0,s;while(s=u[r++]){if(s.execute(q)===false||!this._shouldPropagate){break}}this._shouldPropagate=true},toString:function c(){return"[Signal numListeners: "+this.getNumListeners()+"]"}};e.SignalBinding=function n(t,r,q,s){this.listener=t;this._isOnce=r;this._signal=s;this.listenerScope=q};e.SignalBinding.prototype={_isPaused:false,execute:function l(q){if(!this._isPaused){if(this._isOnce){this._signal.remove(this.listener)}return this.listener.apply(this.listenerScope,q)}},pause:function p(){this._isPaused=true},resume:function d(){this._isPaused=false},isPaused:function h(){return this._paused},isOnce:function k(){return this._isOnce},toString:function c(){return"[SignalBinding listener: "+this.listener+", isOnce: "+this._isOnce+", isPaused: "+this._isPaused+", listenerScope: "+this.listenerScope+"]"}}}());