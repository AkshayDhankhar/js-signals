/*
 * JS Signals <https://github.com/millermedeiros/js-signals>
 * Released under the MIT license (http://www.opensource.org/licenses/mit-license.php)
 * @author Miller Medeiros <http://millermedeiros.com>
 * @version 0.0.1
 * @build 29 11/26/2010 03:47 AM
 */
(function(){var d=window.signals={};d.Signal=function(){this._bindings=[]};d.Signal.prototype={_registerListener:function(p,o,n){var q,m=this._indexOfListener(p),r;if(m!=-1){q=this._bindings[m];if(q.isOnce()&&!o){throw new Error("You cannot addOnce() then add() the same listener without removing the relationship first.")}else{if(!q.isOnce()&&o){throw new Error("You cannot add() then addOnce() the same listener without removing the relationship first.")}}r=q}else{r=new d.SignalBinding(p,o,n,this);this._bindings.push(r)}return r},_indexOfListener:function a(m){var o=this._bindings.length;while(o--){if(this._bindings[o].listener===m){return o}}return -1},add:function(n,m){return this._registerListener(n,false,m)},addOnce:function(n,m){return this._registerListener(n,true,m)},remove:function e(n){var m=this._indexOfListener(n);if(m!=-1){this._bindings.splice(m,1)}return n},removeAll:function g(){this._bindings.length=0},getNumListeners:function j(){return this._bindings.length},dispatch:function(){var m=Array.prototype.slice.call(arguments),n=0,p=this._bindings.slice(),o;while(o=p[n++]){o.execute(m)}},toString:function b(){return"[Signal numListeners: "+this.getNumListeners()+"]"}};d.SignalBinding=function k(p,n,m,o){this.listener=p;this._isOnce=n;this._signal=o;this.listenerScope=m};d.SignalBinding.prototype={_isPaused:false,execute:function i(m){if(!this._isPaused){if(this._isOnce){this._signal.remove(this.listener)}this.listener.apply(this.listenerScope,m)}},pause:function l(){this._isPaused=true},resume:function c(){this._isPaused=false},isPaused:function f(){return this._paused},isOnce:function h(){return this._isOnce},toString:function b(){return"[SignalBinding listener: "+this.listener+", isOnce: "+this._isOnce+", isPaused: "+this._isPaused+", listenerScope: "+this.listenerScope+"]"}}}());